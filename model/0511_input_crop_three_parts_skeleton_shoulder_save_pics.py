# -*- coding: utf-8 -*-
"""0511_ttgroup_project_skeleton_cut_shoulder_save_pics.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ih8jJu0tPyeEdw8kCbsQMp1ulKUhfqY4

# **尚未使用**
"""

"""# **資料預處理**"""

# 製作igm_name的list
import glob
import pandas as pd

# sorted() : 排序所有可跌代對象
# split() : 分割()
fn_dic = {"img_name":[]}
paths = sorted(glob.glob(r"C:/Users/user/Desktop/save_tran_pics/*.jpg"))
# print(paths)
for path in paths:
  fn = path.split("/")[-1].split(".")[0].split("\\")[1]
  fn_dic["img_name"].append(fn)
fn_dic_df = pd.DataFrame(fn_dic)
# print(fn_dic_df)

# create keypoints_36_combine_df
import json, codecs
import numpy as np
columns ={
     "coco_col":['Nose_x', 'Nose_y', 'Neck_x', 'Neck_y',
           'R-Sho_x', 'R-Sho_y', 'R-Elb_x', 'R-Elb_y',
           'R-Wr_x', 'R-Wr_y', 'L-Sho_x', 'L-Sho_y',
           'L-Elb_x', 'L-Elb_y', 'L-Wr_x', 'L-Wr_y',
           'R-Hip_x', 'R-Hip_y', 'R-Knee_x', 'R-Knee_y',
           'R-Ank_x', 'R-Ank_y', 'L-Hip_x', 'L-Hip_y',
           'L-Knee_x', 'L-Knee_y', 'L-Ank_x', 'L-Ank_y',
           'R-Eye_x', 'R-Eye_y', 'L-Eye_x', 'L-Eye_y',
           'R-Ear_x', 'R-Ear_y', 'L-Ear_x', 'L-Ear_y']
    }
fn_list = fn_dic["img_name"]
# print(fn_list) 印0004, 0006...

# 運用globals()[] 全域變數：做成動態的變數名。
n_fn_list = []
for fn in fn_list:
  # print(fn)
  obj_text = codecs.open(r"C:/Users/user/Desktop/save_tran_pics/"+ fn + ".json", 'r', encoding='utf-8').read()
  b_new = json.loads(obj_text)
  a_new = np.array(b_new)
  a_new = a_new.reshape(1,36)
  # print(a_new)
  globals()["key_point_36"+ fn +"_df"] = pd.DataFrame(a_new, columns = columns["coco_col"])
  # print(globals()["key_point_36"+ fn +"_df"])
  n_fn_list.append(globals()["key_point_36"+ fn +"_df"])
# print(n_fn_list)

# pd.concat([key_point_36_0004_df, key_point_36_0006_df, key_point_36_0008_df])
key_point_36_combine_df = pd.concat(n_fn_list, ignore_index=True)

# 創三個部位的 DataFrame
# shoulder_df
shoulder_columns_list = ['R-Sho_x', 'R-Sho_y', 'L-Sho_x', 'L-Sho_y']
key_point_36_combine_cut_shoulder_df = key_point_36_combine_df[shoulder_columns_list]
# key_point_36_combine_cut_shoulder_df

# head_df
head_columns_list = ['Nose_x', 'Nose_y', 'Neck_x', 'Neck_y',
                     'R-Sho_x', 'R-Sho_y', 'L-Sho_x', 'L-Sho_y',
                     'R-Eye_x', 'R-Eye_y', 'L-Eye_x', 'L-Eye_y',
                     'R-Ear_x', 'R-Ear_y', 'L-Ear_x', 'L-Ear_y'
           ]
key_point_36_combine_cut_head_df = key_point_36_combine_df[head_columns_list]

# foot_df
foot_columns_list = ['L-Hip_x', 'L-Hip_y', 'R-Hip_x', 'R-Hip_y',
                     'R-Knee_x', 'R-Knee_y', 'L-Knee_x', 'L-Knee_y',
                     'L-Ank_x', 'L-Ank_y', 'R-Ank_x', 'R-Ank_y',
           ]
key_point_36_combine_cut_foot_df = key_point_36_combine_df[foot_columns_list]

# 開始將三個部位分別crop並存檔
# input_save_pics
from PIL import Image
import matplotlib.pyplot as plt
import os
fn_list = fn_dic["img_name"]

save_base = "C:/Users/user/Desktop/test_crop_pics/"
if not os.path.exists(save_base):
  os.makedirs(save_base)

# crop shoulder
for i, fn in enumerate(fn_list):
    img = Image.open("C:/Users/user/Desktop/save_tran_pics/" + fn + ".jpg").convert("RGB")

    x1 = int(key_point_36_combine_cut_shoulder_df[i:i + 1]["R-Sho_x"])
    x2 = int(key_point_36_combine_cut_shoulder_df[i:i + 1]["L-Sho_x"])
    left = x1 - 10  # left
    right = x2 + 10  # right

    y1 = int(key_point_36_combine_cut_shoulder_df[i:i + 1]["R-Sho_y"])
    y2 = int(key_point_36_combine_cut_shoulder_df[i:i + 1]["L-Sho_y"])
    top = min(y1, y2) - 10  # top
    bottom = max(y1, y2) + 10  # bottom
    # print(top, left, right, bottom)
    img_crop = img.crop((left, top, right, bottom))
    img_crop.save(save_base + "crop_sho_" + fn_list[i] + ".jpg")
print("save_sho_finsh")

# input_crop_and_save_head_pics
for i, fn in enumerate(fn_list):
    img = Image.open("C:/Users/user/Desktop/save_tran_pics/" + fn + ".jpg").convert("RGB")

    x = int(key_point_36_combine_cut_head_df[i:i + 1]["Nose_x"])
    xL1 = int(key_point_36_combine_cut_head_df[i:i + 1]["R-Eye_x"])
    xL2 = int(key_point_36_combine_cut_head_df[i:i + 1]["R-Ear_x"])
    xR1 = int(key_point_36_combine_cut_head_df[i:i + 1]["L-Eye_x"])
    xR2 = int(key_point_36_combine_cut_head_df[i:i + 1]["L-Ear_x"])
    xN = int(key_point_36_combine_cut_head_df[i:i + 1]["Neck_x"])
    # 將非0值去除,以免min拿到0的值
    left_n_list = [n for n in [x, xL1, xL2,xN] if n != 0]
    left = min(left_n_list) - 10  # left
    right = max(x, xR1, xR2 ,xN) + 10  # right

    y1 = int(key_point_36_combine_cut_head_df[i:i + 1]["Nose_y"])
    y2 = int(key_point_36_combine_cut_head_df[i:i + 1]["R-Eye_y"])
    y3 = int(key_point_36_combine_cut_head_df[i:i + 1]["R-Ear_y"])
    y4 = int(key_point_36_combine_cut_head_df[i:i + 1]["L-Eye_y"])
    y5 = int(key_point_36_combine_cut_head_df[i:i + 1]["L-Ear_y"])
    # 將非0值去除,以免min拿到0的值
    top_n_list = [n for n in [y1, y2, y3, y4, y5] if n != 0]
    top = min(top_n_list) - 10  # top
    bottom = max(y1, y2, y3, y4, y5) + 10  # bottom
    # print(top, left, right, bottom)
    img_crop = img.crop((left, top, right, bottom))
    img_crop.save(save_base+ "crop_hd_"+ fn_list[i] + ".jpg")
print("save_hd_finsh")

# input_crop_and_save_foot_pics
for i, fn in enumerate(fn_list):
    img = Image.open("C:/Users/user/Desktop/save_tran_pics/" + fn + ".jpg").convert("RGB")

    x1 = int(key_point_36_combine_cut_foot_df[i:i + 1]["R-Hip_x"])
    x2 = int(key_point_36_combine_cut_foot_df[i:i + 1]["R-Knee_x"])
    x3 = int(key_point_36_combine_cut_foot_df[i:i + 1]["R-Ank_x"])
    x4 = int(key_point_36_combine_cut_foot_df[i:i + 1]["L-Hip_x"])
    x5 = int(key_point_36_combine_cut_foot_df[i:i + 1]["L-Knee_x"])
    x6 = int(key_point_36_combine_cut_foot_df[i:i + 1]["L-Ank_x"])
    if sum([x1, x2, x3, x4, x5, x6]) == 0:
      left = 0
      right = 10
    else:
      n_list = [n for n in [x1, x2, x3, x4, x5, x6] if n != 0]
      left = min(n_list) - 10  # left
      right = max(n_list) + 10  # righ

    y1 = int(key_point_36_combine_cut_foot_df[i:i + 1]["R-Hip_y"])
    y2 = int(key_point_36_combine_cut_foot_df[i:i + 1]["R-Knee_y"])
    y3 = int(key_point_36_combine_cut_foot_df[i:i + 1]["R-Ank_y"])
    y4 = int(key_point_36_combine_cut_foot_df[i:i + 1]["L-Hip_y"])
    y5 = int(key_point_36_combine_cut_foot_df[i:i + 1]["L-Knee_y"])
    y6 = int(key_point_36_combine_cut_foot_df[i:i + 1]["L-Ank_y"])
    if sum([y1, y2, y3, y4, y5, y6]) == 0:
      top = 0
      bottom = 10
    else:
      n_list = [n for n in [y1, y2, y3, y4, y5, y6] if n != 0]
      top = min(n_list) - 10  # top
      bottom = max(n_list) + 10  # bottom
    # print(top, left, right, bottom)
    img_crop = img.crop((left, top, right, bottom))
    img_crop.save(save_base + "crop_ft_" + fn_list[i] + ".jpg")
print("save_ft_finsh")